//
//  RestaurantsProtocols.swift
//  FoodDelivery
//
//  Created Galean Pallerman on 16.08.2019.
//  Copyright Â© 2019 GPco. All rights reserved.
//
//  Template generated by Galean Pallerman
//

import Foundation

protocol RestaurantsViewToPresenterProtocol: NSObject {
    func viewDidLoad()
    func currentCityName() -> String
    func cityButtonTapped()
    func restaurantsTableViewNumberOfSections() -> Int
    func restaurantsTableViewSectionTitle(for section: Int) -> String
    func restaurantsTableViewNumberOfRows(for section: Int) -> Int
    func restaurantsTableViewCellData(for indexPath: IndexPath) -> RestaurantsTableViewCellData
    
    func cityPickerFinished()
}

protocol RestaurantsPresenterToInteractorProtocol: NSObject {
    var currentCityName: String { get }

    func fetchCurrentCity()
    func requestCities()
    
    func restaurantsSectionsNumber() -> Int
    func restaurantsSections() -> [String]
    func restaurantsCount(for section: Int) -> Int
    func restaurantData(for indexPath: IndexPath) -> RestaurantStruct
    func restaurantChosen(at indexPath: IndexPath)
}

protocol RestaurantsPresenterToViewProtocol: NSObject {
    func animateCitiesLoading(_ loading: Bool)
    func animateRestaurantsLoading(_ loading: Bool)
    func reloadRestaurantsTableView()
    func pushController(with identifier: String)
    
    func presentCityPicker()
    func dissmissCityPicker()
}

protocol RestaurantsInteractorToPresenterProtocol: NSObject {
    func updatingCurrentCity(_ isUpdating: Bool)
    
    func restaurantsFetched()
    func restaurantsFetched(with error: NSError)
    
    func callCityPicker()
}

protocol RestaurantsServerToInteractorProtocol: NSObject {
    
}
